# -*- mode: ruby -*-
# vi: set ft=ruby :
# Vikman Fernandez-Castro
# February 9, 2020

require_relative "../shared/shared.rb"

Vagrant.configure("2") do |config|
    config.vm.define "impish" do |v|
      v.vm.box = "ubuntu/impish64"
      v.vm.hostname = "impish"
      v.vm.network "private_network", ip: $hosts[v.vm.hostname]
    end

    config.vm.define "hirsute", autostart: false do |v|
      v.vm.box = "ubuntu/hirsute64"
      v.vm.hostname = "hirsute"
      v.vm.network "private_network", ip: $hosts[v.vm.hostname]
    end

    config.vm.define "groovy", autostart: false do |v|
      v.vm.box = "ubuntu/groovy64"
      v.vm.hostname = "groovy"
      v.vm.network "private_network", ip: $hosts[v.vm.hostname]
    end

    config.vm.define "focal", autostart: false do |focal|
      focal.vm.box = "ubuntu/focal64"
      focal.vm.hostname = "focal"
      focal.vm.network "private_network", ip: $hosts[focal.vm.hostname]
    end

    config.vm.define "eoan", autostart: false do |eoan|
      eoan.vm.box = "ubuntu/eoan64"
      eoan.vm.hostname = "eoan"
      eoan.vm.network "private_network", ip: $hosts[eoan.vm.hostname]
    end

    config.vm.define "bionic", autostart: false do |bionic|
      bionic.vm.box = "generic/ubuntu1804"
      bionic.vm.hostname = "bionic"
      bionic.vm.network "private_network", ip: $hosts[bionic.vm.hostname]
    end

    config.vm.define "xenial32", autostart: false do |xenial|
      xenial.vm.box = "ubuntu/xenial32"
      xenial.vm.hostname = "xenial32"
      xenial.vm.network "private_network", ip: $hosts[xenial.vm.hostname]
    end

    # The vboxsf filesystem is not installed so we can't share folders
    config.vm.synced_folder ".", "/vagrant", disabled: true

    config.vm.provision "file", source: "../shared", destination: "shared"
    config.vm.provision "shell", path: "../shared/setup_deb.sh", env: {"SHARED_DIR" => "/home/vagrant/shared"}

    config.vm.provider "virtualbox" do |v|
      v.cpus = 8
      v.memory = 2048
      # v.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
      v.customize [ "modifyvm", :id, "--uartmode1", "file", File::NULL ]
    end

  end
